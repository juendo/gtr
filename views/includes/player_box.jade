.player-box(
  ng-repeat='player in game.players', 
  style='z-index:{{player == you() ? 0 : -1}};background-color: #{{ player == game.players[meta.currentPlayer] ? "CCC" : "333" }};width:{{100/game.players.length}}%;'
)
  .player-clientele-shadow
  .player-clientele
    .client(
      ng-repeat='x in getArray(clienteleLimit(player)) track by $index',
      style='background-color:#{{ player.clientele[$index] ? actionColors[player.clientele[$index]] : "333" }};'
    )
  .pending(
    style='/*background-color: #{{ player == game.players[meta.currentPlayer] ? "DDD" : "444" }}*/'
  )
    .pending-center
      .pending-card(
        ng-repeat='card in player.pending track by $index',
        ng-click='yourTurn() && $parent.$index == meta.you ? pendingClicked(you(), {index: $index, card: card}, game, meta) : null',
        style='background-color:#{{ colors[card.color] }}'
      )
  .player-building-area(
    ng-if='!meta.finished',
    ng-repeat='building in player.buildings track by $index'
  )
    img.building(
      ng-drop='true', 
      ng-drop-success='(yourTurn() && ($parent.$parent.$index == meta.you || hasStairway(you()))) ? dragEnded(you(), $data, $event, building, game, meta) : null', 
      src='images/cards/{{ building.name }}.png',
      alt='{{ building.name }}',
      ng-click='(building.name == "Vomitorium" && yourTurn() && $parent.$parent.$index == meta.you) ? vomitorium(you(), game.pool) : ($parent.$parent.$index != meta.you && yourTurn() ? prison(you(), building, player, $index, game, meta) : null)',
      style='border-style:solid;border-color:#{{player.actions[0] ? actionBorderColors[player.actions[0].kind] : "000"}};border-width:{{ $parent.$parent.$index == meta.currentPlayer && hasAbilityToUse(building.name, player) && player.actions[0] && relevantAction(building.name, player.actions[0].kind) ? "5" : "0" }}px;'
    )
    .materials-holder(
      style='background:repeating-linear-gradient(-45deg,#FFF,#FFF 7px,#{{colors[building.siteColor]}} 7px,#{{colors[building.siteColor]}} 14px);',
      ng-if='!building.done'
    )
      .materials(
        style='width:{{ 16 * colorValues[building.siteColor] }}%;'
      )
        .material(
          ng-repeat='material in building.materials track by $index',
          style='width: {{ 100 / colorValues[building.siteColor] }}%;background-color:#{{ colors[material] }};'
        )
  .player-building-area(
    ng-if='!!player.publicBuildings && !meta.finished && !hasAbilityToUseWithoutPublicBuildings(building, player)',
    ng-repeat='building in player.publicBuildings track by $index'
  )
    img.building(
      src='images/cards/{{ building }}.png',
      alt='{{ building }}',
      ng-click='(building == "Vomitorium" && yourTurn()) ? vomitorium(you(), game.pool) : null',
      style='opacity:0.5;border-style:solid;border-color:#{{player.actions[0] ? actionBorderColors[player.actions[0].kind] : "000"}};border-width:{{ $parent.$parent.$index == meta.currentPlayer && hasAbilityToUse(building.name, player) && player.actions[0] && relevantAction(building, player.actions[0].kind) ? "5" : "0" }}px;'
    )
  .score-box(
    ng-if='meta.finished'
  )
    .score
      | {{ player.winner ? "GLORY TO " + player.name.toUpperCase() : score(player) + " POINTS"}}
    .vault(
      style='background-color: #{{ player == game.players[meta.currentPlayer] ? "DDD" : "444" }}'
    )
      .stockpile-padding
      .stockpile-center
        .stockpile-material(
          ng-repeat='material in player.vault track by $index', 
          style='background-color:#{{ colors[material] }};'
        )
  .stockpile(
    style='background-color: #{{ player == game.players[meta.currentPlayer] ? "DDD" : "444" }}'
  )
    .stockpile-padding
    .stockpile-center
      .stockpile-material(
        ng-drag='$parent.$index == meta.you',
        ng-drag-data='{index: $index, material: material}', 
        ng-repeat='material in player.stockpile track by $index', 
        ng-click='yourTurn() && $parent.$index == meta.you ? stockpileClicked(you(), {index: $index, material: material}, game, meta) : null', 
        style='background-color:#{{ colors[material] }};'
      )